from functions.get_files_info import get_files_info, get_file_content, write_file, run_python_file

def main():
    # result = get_files_info('calculator', '.')
    # indented_result = '\n'.join('  ' + line for line in result.split('\n') if line)
    # print("Result for current directory: \n" + indented_result)
    # result2 = get_files_info('calculator', 'pkg')
    # indented_result2 = '\n'.join('  ' + line for line in result2.split('\n') if line)
    # print("Result for 'pkg' directory: \n"  + indented_result2)
    # result3 = get_files_info('calculator', '/bin')
    # indented_result3 = '\n'.join('  ' + line for line in result3.split('\n') if line)
    # print("Result for '/bin' directory: \n" + indented_result3)
    # result4 = get_files_info('calculator', '../')
    # indented_result4 = '\n'.join('  ' + line for line in result4.split('\n') if line)
    # print("Result for '../' directory: \n"  + indented_result4)
    # print(get_file_content("calculator", "lorem.txt"))
    # print(get_file_content("calculator", "main.py"))
    # print(get_file_content("calculator", "pkg/calculator.py"))
    # print(get_file_content("calculator", "/bin/cat"))
    # print(get_file_content("calculator", "pkg/does_not_exist.py"))
    # print(write_file("calculator", "lorem.txt", "wait, this isn't lorem ipsum"))
    # print(write_file("calculator", "pkg/morelorem.txt", "lorem ipsum dolor sit amet"))
    # print(write_file("calculator", "/tmp/temp.txt", "this should not be allowed"))
    # print(write_file("calculator", "lorem.txt", "wait, this isn't lorem ipsum"))
    # print(write_file("calculator", "pkg/morelorem.txt", "lorem ipsum dolor sit amet"))
    # print(write_file("calculator", "/tmp/temp.txt", "this should not be allowed"))
    print(run_python_file("calculator", "main.py")) #(should print the calculator's usage instructions)
    print(run_python_file("calculator", "main.py", ["3 + 5"])) #(should run the calculator... which gives a kinda nasty rendered result)
    print(run_python_file("calculator", "tests.py"))
    print(run_python_file("calculator", "../main.py")) #(this should return an error)
    print(run_python_file("calculator", "nonexistent.py"))

if __name__ == "__main__":
    main()